#!/usr/bin/env bash

mirror=mirror
mirror_git=$mirror/git
mirror_debian=$mirror/debian

usage() {
  cat <<EOM
  Usage: `basename $0` [command] [arg(s)]
    Commands:
    - update [repolist]: Updates the repositories specified in [repolist]
    - init: Initializes the workspace by cloning dotfiles from mirror/git
    - push [remote]: Synchronizes [remote] from local mirror
    - pull [remote]: Synchronizes local mirror from [remote]
EOM
  exit 0
}

update_repos() {
  args=()

  if [[ -f $1 ]]; then
    while read line
    do
      args+=("$line")
    done < $1
  fi

  cwd=$(pwd)
  for line in "${args[@]}"; do
    if [[ $line == \#* ]]; then
      : # noop
    elif [[ $line == dir\:* ]]; then
      cwd=${line##*:}
      [[ -d $cwd ]] || mkdir -p $cwd
    elif [[ ! -d $cwd/${line##*/} ]]; then
      git clone --mirror $line $cwd/${line##*/}
    else
      pushd $cwd/${line##*/} &> /dev/null;
        git remote update;
      popd &> /dev/null;
    fi
  done
}

initialize() {
  if [[ ! -d dotfiles ]]; then
    git clone mirror/git/base/dotfiles.git
    pushd dotfiles &> /dev/null;
      git submodule update --recursive --init
      git remote add upstream "git@github.com:lenzomj/dotfiles.git"
    popd &> /dev/null;
  fi
}

update_system() {
  system_files=( "http://database.clamav.net/daily.cvd" )

  system_dst=$mirror/debian

  [[ -d $system_dst ]] || mkdir -p $system_dst

  for file in ${system_files[@]}; do
    curl $file --output $system_dst/${file##*/}
  done
}

push_to() {
  [[ -d $1 ]] && \
    rsync --update --delete --progress -r $mirror $1
}

pull_from() {
  [[ -d $1 ]] && \
    rsync --update --delete --progress -r $1/$mirror .
}

[ "$#" -ge 1 ] || { usage; }

if [ "$1" == "update" ]; then
  [ "$#" -ge 2 ] || { usage; }
  update_repos repolists/$2
elif [ "$1" == "push" ]; then
  push_to $2
elif [ "$1" == "pull" ]; then
  pull_from $2
elif [ "$1" == "init" ]; then
  initialize
fi
