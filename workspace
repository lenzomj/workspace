#!/usr/bin/env bash

mirror=mirror
mirror_git=$mirror/git
mirror_debian=$mirror/debian

repos=( "git@github.com:lenzomj/workspace.git"
        "git@github.com:lenzomj/dotfiles.git"
        "git@github.com:VundleVim/Vundle.vim.git"
        "git@github.com:powerline/fonts.git"
        "git@github.com:scrooloose/nerdtree.git"
        "git@github.com:rking/ag.vim.git"
        "git@github.com:majutsushi/tagbar.git"
        "git@github.com:kien/ctrlp.vim.git"
        "git@github.com:ajh17/VimCompletesMe.git"
        "git@github.com:pseewald/vim-anyfold.git"
        "git@github.com:vim-airline/vim-airline.git"
        "git@github.com:vim-airline/vim-airline-themes.git"
        "git@github.com:flazz/vim-colorschemes.git"
        "git@github.com:godlygeek/tabular.git"
        "git@github.com:plasticboy/vim-markdown.git"
        "git@github.com:airblade/vim-gitgutter.git" )

usage() {
  cat <<EOM
  Usage: `basename $0` [mirror]
    Options:
    - get: Something
EOM
  exit 0
}

update_repos() {
  args=("$@")

  repos_dst=$mirror/git

  [[ -d $mirror_git ]] || mkdir -p $mirror_git

  for repo in "${args[@]}"; do
    if [[ ! -d $mirror_git/${repo##*/} ]]; then
      pushd $mirror_git &> /dev/null;
        git clone --mirror $repo
      popd &> /dev/null;
    else
      pushd $mirror_git/${repo##*/} &> /dev/null;
        git remote update
      popd &> /dev/null;
    fi
  done

  if [[ ! -d dotfiles ]]; then
    git clone $mirror_git/dotfiles.git
    pushd dotfiles &> /dev/null;
      git submodule update --recursive --init
      git remote add upstream "git@github.com:lenzomj/dotfiles.git"
    popd &> /dev/null;
  fi
}

update_system() {
  system_files=( "http://database.clamav.net/daily.cvd" )

  system_dst=$mirror/debian

  [[ -d $system_dst ]] || mkdir -p $system_dst

  for file in ${system_files[@]}; do
    curl $file --output $system_dst/${file##*/}
  done
}

push_to() {
  [[ -d $1 ]] && \
    rsync --update --delete --progress -r $mirror $1
}

pull_from() {
  [[ -d $1 ]] && \
    rsync --update --delete --progress -r $1/$mirror .
}

[ -z $1 ] && { usage; }

if [ "$1" == "update" ]; then
  update_repos "${repos[@]}"
  #update_system
elif [ "$1" == "push" ]; then
  push_to $2
elif [ "$1" == "pull" ]; then
  pull_from $2
fi
