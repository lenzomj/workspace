---
# common :: tasks

  - name: "Creating {{ box_local_path }} directory structure"
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - "{{ box_local_cache_path }}"
      - "{{ box_local_inventory_path }}"
      - "{{ box_local_roles_path }}"
      - "{{ box_local_path }}/vault"

  - name: "Creating {{ box_local_vault_path }}, if it does not exist"
    copy:
      content: ""
      dest: "{{ box_local_vault_path }}"
      force: false

  - name: "Creating {{ box_local_inventory_path }}/hosts, if it does not exist"
    copy:
      content: ""
      dest: "{{ box_local_inventory_path }}/hosts"
      force: false

  - name: "Creating a symbolic link to {{ box_local_path }}"
    file:
      src: "{{ box_local_path }}"
      dest: "{{ box_workspace_refs_path }}/local"
      state: link

  - name: Generating default workspace configuration file
    template:
      src: "configuration.yml"
      dest: "{{ box_local_config_path }}"
      force: false # Do not overwrite existing

  - name: Checking for a local network mirror
    ignore_errors: true
    uri:
      url: "{{ box_netmirror_uri }}/github.com"
      follow_redirects: safe
      method: GET
    register: _rget_localhost
    until: (_rget_localhost.status == 200)
    failed_when: false
    retries: 2
    delay: 0.5

  - name: Consolidating facts about networked resources
    set_fact:
      box_has_netmirror: "{{ (_rget_localhost.status == 200) | bool }}"

    #TODO: Use a filter to narrow down candidates
  - name: Checking for an airgap drive
    with_items: "{{ ansible_mounts }}"
    when: item.mount in box_airgap_mount_paths
    set_fact:
      box_has_airgap_mount: true
      box_airgap_mount_path: "{{ item.mount }}"

  - name: Checking for an airgap mirror
    stat:
      path: "{{ box_airgap_mount_path }}/mirror"
    register: _mstat

  - name: Consolidating facts about airgap resources
    set_fact:
      box_has_gapmirror: "{{ _mstat.stat.exists }}"
      box_gapmirror_uri: "{{ _mstat.stat.path if _mstat.stat.exists else 'none' }}"

  - name: Checking for a workspace vault keyfile
    stat:
      path: "{{ box_airgap_mount_path }}/vault/workspace.keys"
    register: _kstat

  - name: Consolidating facts
    set_fact:
      box_has_mirror: (box_has_netmirror or box_has_gapmirror)
      box_mirror_uri: "{{ box_gapmirror_uri }}"
      box_vault_key_path: "{{ _kstat.stat.path if _kstat.stat.exists else 'none' }}"

  - name: Including encrypted vault variables
    include_vars:
      file: "{{ box_local_vault_path }}"

  - name: Including workspace configuration
    include_vars:
      file: "{{ box_local_config_path }}"
