---
# library :: fetch-repositories

  - name: "Fetching public repositories from upstream"
    when:
      - ( box_has_internet )
      - ( box_has_git )
      - ( 'git' in box_fetch_allowlist )
    git:
      repo: "{{ item.upstream }}"
      dest: "{{ _dest }}"
      bare: yes
      clone: yes
      update: yes
    vars:
      _host: "{{ item.upstream | urlsplit('hostname') }}"
      _path: "{{ item.upstream | urlsplit('path') }}"
      _cache_path: "{{ item.args.cache | default(box_local_cache_path) }}"
      _dest: "{{ _cache_path }}/{{ _host }}{{ _path }}"
    loop_control:
      label: "{{ _dest }}"
    loop: "{{ repositories | selectattr('args.password', 'undefined') }}"

  - name: "Fetching password-protected repositories from upstream"
    no_log: true
    when:
      - ( box_has_internet )
      - ( box_has_git )
      - ( 'git' in box_fetch_allowlist )
    expect:
      command: |
        {{ box_task_library }}/fetch-repository.sh {{ _repo }} {{ _dest }}
      timeout: null
      responses:
        (.*)Username(.*): "{{ item.args.username }}"
        (.*)Password(.*): "{{ item.args.password }}"
    vars:
      _host: "{{ item.upstream | urlsplit('hostname') }}"
      _path: "{{ item.upstream | urlsplit('path') }}"
      _cache_path: "{{ item.args.cache | default(box_local_cache_path) }}"
      _repo: "{{ item.upstream }}"
      _dest: "{{ _cache_path }}/{{ _host }}{{ _path }}"
    loop: "{{ repositories | selectattr('args.password', 'defined') }}"

  - name: "Fetching repositories from mirror"
    when:
      - ( box_has_mirror and not box_has_internet )
      - ( box_has_git)
      - ( 'git' in box_fetch_allowlist )
      - ( _repo != _dest )
    git:
      repo: "{{ _repo }}"
      dest: "{{ _dest }}"
      bare: yes
      clone: yes
      update: yes
    vars:
      _host: "{{ item.upstream | urlsplit('hostname') }}"
      _path: "{{ item.upstream | urlsplit('path') }}"
      _mirror_path: "{{ item.args.mirror | default(box_mirror_uri) }}"
      _cache_path: "{{ item.args.cache | default(box_local_cache_path) }}"
      _repo: "{{ _mirror_path }}/{{ _host }}{{ _path }}"
      _dest: "{{ _cache_path }}/{{ _host }}{{ _path }}"
    loop_control:
      label: "{{ _dest }}"
    loop: "{{ repositories }}"
