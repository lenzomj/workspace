---
# library :: clone-repositories

  - name: "Cloning repositories from {{ box_cache_path }}"
    git:
      repo: "{{ _cache_path }}"
      dest: "{{ item.args.clone }}"
      remote: origin
      clone: yes
      update: yes
    vars:
      _host: "{{ item.upstream | urlsplit('hostname') }}"
      _path: "{{ item.upstream | urlsplit('path') }}"
      _cache_path: "{{ box_cache_path }}/{{ _host }}{{ _path }}"
    loop: "{{ repositories
              | selectattr('args.clone', 'defined')
           }}"

  - name: Adding upstream remote
    shell: |
      if ! (git remote | grep -q upstream); then
        git remote add upstream {{ item.upstream }}
        echo "Added upstream remote"
      fi
    args:
      chdir: "{{ item.args.clone }}"
    register: _result
    changed_when: _result.stdout | regex_search("Added upstream remote")
    loop: "{{ repositories
              | selectattr('args.clone', 'defined')
           }}"

  - name: Initializing repositories
    command: "{{ item.args.setup }}"
    args:
      chdir: "{{ item.args.clone }}"
    loop: "{{ repositories
              | selectattr('args.clone', 'defined')
              | selectattr('args.setup', 'defined')
           }}"
