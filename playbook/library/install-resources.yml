---
# library :: install-resources

  - name: Installing .deb package resources
    become: true
    when:
      - (ansible_os_family == "Debian")
      - (_rcs.requires | default(true, true))
    apt:
      deb: "{{ _cache_path }}"
      state: present
    vars:
      _host: "{{ _rcs.upstream | urlsplit('hostname') }}"
      _path: "{{ _rcs.upstream | urlsplit('path') }}"
      _cache_path: "{{ box_local_cache_path }}/{{ _host }}{{ _path }}"
    loop_control:
      loop_var: _rcs
    loop: "{{ resources
              | selectattr('handlers', 'search', 'install.*Debian')
           }}"

  - name: Installing .rpm package resources
    become: true
    when:
      - (ansible_os_family == "RedHat")
      - (_rcs.requires | default(true, true))
    package:
      name: "{{ _cache_path }}"
      state: present
    vars:
      ansible_python_interpreter: "/usr/bin/env python"
      _host: "{{ _rcs.upstream | urlsplit('hostname') }}"
      _path: "{{ _rcs.upstream | urlsplit('path') }}"
      _cache_path: "{{ box_local_cache_path }}/{{ _host }}{{ _path }}"
    loop_control:
      loop_var: _rcs
    loop: "{{ resources
              | selectattr('handlers', 'search', 'install.*RedHat')
           }}"

  - name: Extracting archived resources
    when:
      - (_rcs.requires | default(true, true))
    unarchive:
      src: "{{ _src }}"
      dest: "{{ _rcs.args.dest }}"
    vars:
      _host: "{{ _rcs.upstream | urlsplit('hostname') }}"
      _path: "{{ _rcs.upstream | urlsplit('path') }}"
      _cache_path: "{{ _rcs.args.cache | default(box_local_cache_path) }}"
      _src: "{{ _cache_path }}/{{ _host }}{{ _path }}"
      _handler: "extract.*{{ ansible_os_family }}"
    loop_control:
      loop_var: _rcs
    loop: "{{ resources
              | selectattr('handlers', 'search', _handler)
           }}"

  - name: Copying resources
    when:
      - (_rcs.requires | default(true, true))
    copy:
      src: "{{ _src }}"
      dest: "{{ _rcs.args.dest }}"
      mode: "{{ _rcs.args.mode | default('preserve') }}"
    vars:
      _host: "{{ _rcs.upstream | urlsplit('hostname') }}"
      _path: "{{ _rcs.upstream | urlsplit('path') }}"
      _cache_path: "{{ _rcs.args.cache | default(box_local_cache_path) }}"
      _src: "{{ _cache_path }}/{{ _host }}{{ _path }}"
      _handler: "copy.*{{ ansible_os_family }}"
    loop_control:
      loop_var: _rcs
    loop: "{{ resources
              | selectattr('handlers', 'search', _handler)
           }}"
