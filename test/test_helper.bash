# Built-in Paths
# BATS_TMPDIR           - the location for temporary files (e.g, /tmp)
# BATS_TEST_FILENAME    - the fully expanded path to the .bats test file
# BATS_TEST_DIRNAME     - the directory that contains the .bats test file
# BATS_TEST_NAMES       - an array of function names for each test case
# BATS_TEST_NAME        - the name of the current test case
# BATS_TEST_NUMBER      - the index of the current test case
# BATS_TEST_DESCRIPTION - the description of the current test case

# Extended Paths
# BATS_TEST_TESTNAME    - the name of the .bats test file without extension
# BATS_TEST_TMPDIR      - the location for files generated by this test
setup_file () {
  BATS_TEST_TESTNAME=$(basename -- "${BATS_TEST_FILENAME}")
  BATS_TEST_TESTNAME="${BATS_TEST_TESTNAME%.*}"
  BATS_TEST_TMPDIR="${BATS_TMPDIR}/${BATS_TEST_TESTNAME}.XXX"
  BATS_TEST_TMPDIR="$(mktemp -d "${BATS_TEST_TMPDIR}" 2>/dev/null || echo "${BATS_TEST_TMPDIR}")"
  export BATS_TEST_TESTNAME
  export BATS_TEST_TMPDIR
}

teardown_file () {
  if [[ ${BATS_TEST_TMPDIR_CLEAN} == false ]]; then
    echo "# Please manually remove ${BATS_TEST_TMPDIR}" >&3
  else
    rm -rf "${BATS_TEST_TMPDIR}"
  fi
}

create_git_repo() {
  git init --bare "$1"
  git clone "$1" "${BATS_TEST_TMPDIR}/scratch"
  pushd "${BATS_TEST_TMPDIR}/scratch" &> /dev/null;
    git config user.email "create_git_repo"
    git config user.name "create_git_repo"
    touch README.md
    git add .
    git commit -m "create_git_repo"
    git push origin master
  popd &> /dev/null
  rm -rf "${BATS_TEST_TMPDIR}/scratch"
}

set_teardown_noclean () {
  export BATS_TEST_TMPDIR_CLEAN=false
}
